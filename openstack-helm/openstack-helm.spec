#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : openstack-helm
Version  : 1.0
Release  : 1
URL      : file:///home/clr/stx-tar/openstack-helm-1.0.tar.gz
Source0  : file:///home/clr/stx-tar/openstack-helm-1.0.tar.gz
Source1  : file:///home/clr/stx-tar/openstack-helm.tar.gz
Summary  : No detailed summary available
Group    : Development/Tools
License  : Apache-2.0
Requires: openstack-helm-python = %{version}-%{release}
Requires: openstack-helm-python3 = %{version}-%{release}
Requires: openstack-helm-infra
BuildRequires : buildreq-distutils3
BuildRequires : helm
BuildRequires : openstack-helm-infra
BuildRequires : pbr
Patch1: 0001-Add-Aodh-Chart.patch
Patch2: 0002-Ceilometer-chart-add-the-ability-to-publish-events-t.patch
Patch3: 0003-Remove-stale-Apache2-service-pids-when-a-POD-starts.patch
Patch4: 0004-Fix-ssh-config-in-nova-to-support-cold-migrations.patch
Patch5: 0005-Nova-console-ip-address-search-optionality.patch
Patch6: 0006-Nova-chart-Support-ephemeral-pool-creation.patch
Patch7: 0007-Horizon-Disable-apache2-status_module.patch
Patch8: 0008-Neutron-Add-support-for-disabling-Readiness-Liveness.patch
Patch9: 0009-Nova-Add-support-for-disabling-Readiness-Liveness-pr.patch
Patch10: 0010-Ironic-Add-pxe-boot-support-for-centos-image.patch
Patch11: 0011-Use-nova-s-ping-method-to-find-out-if-the-service-is.patch
Patch12: 0012-Add-internal-tenant-id-in-conf.patch
Patch13: 0013-cinder-allow-configuring-the-rbd-app-name.patch
Patch14: 0014-Cinder-Support-backup-driver-specification-by-module.patch
Patch15: 0015-Add-Placement-Chart.patch
Patch16: 0016-Cinder-rename-is_ceph_volume-configured.patch
Patch17: 0017-Cinder-support-multiple-ceph-volume-backends.patch
Patch18: 0018-Nova-add-service-token.patch
Patch19: 0019-Add-TLS-support-for-Aodh-and-Panko-public-endpoints.patch
Patch20: 0020-Change-cinder-bootstrap-script.patch
Patch21: 0001-fix-ip-address.patch

%description
==============
OpenStack-Helm
==============
Mission
-------
The goal of OpenStack-Helm is to provide a collection of Helm charts that
simply, resiliently, and flexibly deploy OpenStack and related services
on Kubernetes.

%package python
Summary: python components for the openstack-helm package.
Group: Default
Requires: openstack-helm-python3 = %{version}-%{release}

%description python
python components for the openstack-helm package.


%package python3
Summary: python3 components for the openstack-helm package.
Group: Default
Requires: python3-core

%description python3
python3 components for the openstack-helm package.


%prep
%setup -q -n openstack-helm
cd ..
%setup -q -T -D -n openstack-helm -b 1
%patch1 -p1
%patch2 -p1
%patch3 -p1
%patch4 -p1
%patch5 -p1
%patch6 -p1
%patch7 -p1
%patch8 -p1
%patch9 -p1
%patch10 -p1
%patch11 -p1
%patch12 -p1
%patch13 -p1
%patch14 -p1
%patch15 -p1
%patch16 -p1
%patch17 -p1
%patch18 -p1
%patch19 -p1
%patch20 -p1
%patch21 -p2

%build
## build_prepend content
%define helm_home %{getenv:HOME}/.helm
%global helm_folder  /usr/lib/helm
%global toolkit_version 0.1.0
export PBR_VERSION=%{version}
mkdir %{helm_home}
mkdir %{helm_home}/repository
mkdir %{helm_home}/repository/cache
mkdir %{helm_home}/repository/local
mkdir %{helm_home}/plugins
mkdir %{helm_home}/starters
mkdir %{helm_home}/cache
mkdir %{helm_home}/cache/archive
tar -zxvf %{SOURCE1}
cp repositories.yaml %{helm_home}/repository/repositories.yaml
cp index.yaml %{helm_home}/repository/local/index.yaml
cp %{helm_folder}/helm-toolkit-%{toolkit_version}.tgz .
helm serve --repo-path . &
helm repo rm local
helm repo add local http://127.0.0.1:8879/charts
make aodh
make barbican
make ceilometer
make cinder
make glance
make heat
make horizon
make ironic
make keystone
make magnum
make neutron
make nova
make panko
make placement
kill %1
rm helm-toolkit-%{toolkit_version}.tgz
## build_prepend end
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1568969495
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%check
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
echo "dont need check"
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
## install_prepend content
export PBR_VERSION=%{version}
install -d -m 755 ${RPM_BUILD_ROOT}%{helm_folder}
## install_prepend end
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----
## install_append content
install -p -D -m 755 *.tgz %{buildroot}%{helm_folder}
## install_append end

%files
%defattr(-,root,root,-)
/usr/lib/helm/aodh-0.1.0.tgz
/usr/lib/helm/barbican-0.1.0.tgz
/usr/lib/helm/ceilometer-0.1.0.tgz
/usr/lib/helm/cinder-0.1.0.tgz
/usr/lib/helm/glance-0.1.0.tgz
/usr/lib/helm/heat-0.1.0.tgz
/usr/lib/helm/horizon-0.1.0.tgz
/usr/lib/helm/ironic-0.1.0.tgz
/usr/lib/helm/keystone-0.1.0.tgz
/usr/lib/helm/magnum-0.1.0.tgz
/usr/lib/helm/neutron-0.1.0.tgz
/usr/lib/helm/nova-0.1.0.tgz
/usr/lib/helm/panko-0.1.0.tgz
/usr/lib/helm/placement-0.1.0.tgz

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
