From 5b57de4364d960922af8d177c30512f3d9e8a33b Mon Sep 17 00:00:00 2001
From: fuyong <fuyong@neusoft.com>
Date: Mon, 30 Sep 2019 10:19:38 +0800
Subject: [PATCH openstack-keystone] openstack-keystone: Autospec creation for
 version 15.0.0.0rc2

---
 .gitignore                              |   14 +
 0001-Rebasing-Keyring-integration.patch |  143 +
 ChangeLog                               | 8201 +++++++++++++++++++++++
 Makefile                                |    5 +
 build_prepend                           |    3 +
 buildreq_add                            |   26 +
 buildreq_ban                            |    2 +
 buildreq_cache                          |    2 +
 excludes                                |    2 +
 install_append                          |   81 +
 install_prepend                         |    2 +
 make_check_command                      |    3 +
 openstack-keystone.license              |    1 +
 openstack-keystone.spec                 |  252 +
 options.conf                            |   58 +
 pkgconfig_add                           |    2 +
 pkgconfig_ban                           |    2 +
 release                                 |    1 +
 requires_add                            |    4 +
 requires_ban                            |    2 +
 series                                  |    1 +
 testresults                             |    5 +
 upstream                                |    2 +
 23 files changed, 8814 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 0001-Rebasing-Keyring-integration.patch
 create mode 100644 ChangeLog
 create mode 100644 Makefile
 create mode 100644 build_prepend
 create mode 100644 buildreq_add
 create mode 100644 buildreq_ban
 create mode 100644 buildreq_cache
 create mode 100644 excludes
 create mode 100644 install_append
 create mode 100644 install_prepend
 create mode 100644 make_check_command
 create mode 100644 openstack-keystone.license
 create mode 100644 openstack-keystone.spec
 create mode 100644 options.conf
 create mode 100644 pkgconfig_add
 create mode 100644 pkgconfig_ban
 create mode 100644 release
 create mode 100644 requires_add
 create mode 100644 requires_ban
 create mode 100644 series
 create mode 100644 testresults
 create mode 100644 upstream

diff --git a/0001-Rebasing-Keyring-integration.patch b/0001-Rebasing-Keyring-integration.patch
new file mode 100644
index 0000000..b9ad336
--- /dev/null
+++ b/0001-Rebasing-Keyring-integration.patch
@@ -0,0 +1,143 @@
+From dfe0978f6590818487bb9fc5e9b8156e77a25590 Mon Sep 17 00:00:00 2001
+From: rpm-build <rpm-build>
+Date: Mon, 8 Apr 2019 15:25:28 -0400
+Subject: [PATCH 1/1] Rebasing Keyring integration
+
+---
+ keystone/exception.py     |  6 ++++++
+ keystone/identity/core.py | 50 +++++++++++++++++++++++++++++++++++++++++++++++
+ requirements.txt          |  1 +
+ 3 files changed, 57 insertions(+)
+
+diff --git a/keystone/exception.py b/keystone/exception.py
+index b85878b..56601ce 100644
+--- a/keystone/exception.py
++++ b/keystone/exception.py
+@@ -224,6 +224,12 @@ class ApplicationCredentialLimitExceeded(ForbiddenNotSecurity):
+                        "maximum of %(limit)d already exceeded for user.")
+ 
+ 
++class WRSForbiddenAction(Error):
++    message_format = _("That action is not permitted")
++    code = 403
++    title = 'Forbidden'
++
++
+ class SecurityError(Error):
+     """Security error exception.
+ 
+diff --git a/keystone/identity/core.py b/keystone/identity/core.py
+index ed43e76..da7e7ba 100644
+--- a/keystone/identity/core.py
++++ b/keystone/identity/core.py
+@@ -17,6 +17,7 @@
+ import copy
+ import functools
+ import itertools
++import keyring
+ import operator
+ import os
+ import threading
+@@ -54,6 +55,7 @@ MEMOIZE_ID_MAPPING = cache.get_memoization_decorator(group='identity',
+ 
+ DOMAIN_CONF_FHEAD = 'keystone.'
+ DOMAIN_CONF_FTAIL = '.conf'
++KEYRING_CGCS_SERVICE = "CGCS"
+ 
+ # The number of times we will attempt to register a domain to use the SQL
+ # driver, if we find that another process is in the middle of registering or
+@@ -1069,6 +1071,26 @@ class Manager(manager.Manager):
+             if new_ref['domain_id'] != orig_ref['domain_id']:
+                 raise exception.ValidationError(_('Cannot change Domain ID'))
+ 
++    def _update_keyring_password(self, user, new_password):
++        """Update user password in Keyring backend.
++        This method Looks up user entries in Keyring backend
++        and accordingly update the corresponding user password.
++        :param user         : keyring user struct
++        :param new_password : new password to set
++        """
++        if (new_password is not None) and ('name' in user):
++            try:
++                # only update if an entry exists
++                if (keyring.get_password(KEYRING_CGCS_SERVICE, user['name'])):
++                    keyring.set_password(KEYRING_CGCS_SERVICE,
++                                         user['name'], new_password)
++            except (keyring.errors.PasswordSetError, RuntimeError):
++                msg = ('Failed to Update Keyring Password for the user %s')
++                LOG.warning(msg, user['name'])
++                # only raise an exception if this is the admin user
++                if (user['name'] == 'admin'):
++                    raise exception.WRSForbiddenAction(msg % user['name'])
++
+     @domains_configured
+     @exception_translated('user')
+     def update_user(self, user_id, user_ref, initiator=None):
+@@ -1113,6 +1135,13 @@ class Manager(manager.Manager):
+             )
+             notifications.invalidate_token_cache_notification(reason)
+ 
++        # Certain local Keystone users are stored in Keystone as opposed
++        # to the default SQL Identity backend, such as the admin user.
++        # When its password is updated, we need to update Keyring as well
++        # as certain services retrieve this user context from Keyring and
++        # will get auth failures
++        if ('password' in user) and ('name' in ref):
++            self._update_keyring_password(ref, user['password'])
+         return self._set_domain_id_and_mapping(
+             ref, domain_id, driver, mapping.EntityType.USER)
+ 
+@@ -1128,6 +1157,7 @@ class Manager(manager.Manager):
+         hints.add_filter('user_id', user_id)
+         fed_users = PROVIDERS.shadow_users_api.list_federated_users_info(hints)
+ 
++        username = user_old.get('name', "")
+         driver.delete_user(entity_id)
+         PROVIDERS.assignment_api.delete_user_assignments(user_id)
+         self.get_user.invalidate(self, user_id)
+@@ -1141,6 +1171,18 @@ class Manager(manager.Manager):
+ 
+         PROVIDERS.credential_api.delete_credentials_for_user(user_id)
+         PROVIDERS.id_mapping_api.delete_id_mapping(user_id)
++
++        # Delete the keyring entry associated with this user (if present)
++        try:
++            keyring.delete_password(KEYRING_CGCS_SERVICE, username)
++        except keyring.errors.PasswordDeleteError:
++            LOG.warning(('delete_user: PasswordDeleteError for %s'),
++                        username)
++            pass
++        except exception.UserNotFound:
++            LOG.warning(('delete_user: UserNotFound for %s'),
++                        username)
++            pass
+         notifications.Audit.deleted(self._USER, user_id, initiator)
+ 
+         # Invalidate user role assignments cache region, as it may be caching
+@@ -1390,6 +1432,14 @@ class Manager(manager.Manager):
+         notifications.Audit.updated(self._USER, user_id, initiator)
+         self._persist_revocation_event_for_user(user_id)
+ 
++        user = self.get_user(user_id)
++        # Update Keyring password for the 'user' if it
++        # has an entry in Keyring
++        if (original_password) and ('name' in user):
++            # Change the 'user' password in keyring, provided the user
++            # has an entry in Keyring backend
++            self._update_keyring_password(user, new_password)
++
+     @MEMOIZE
+     def _shadow_nonlocal_user(self, user):
+         try:
+diff --git a/requirements.txt b/requirements.txt
+index e3de1c6..e6d3536 100644
+--- a/requirements.txt
++++ b/requirements.txt
+@@ -42,3 +42,4 @@ pycadf!=2.0.0,>=1.1.0 # Apache-2.0
+ msgpack>=0.5.0 # Apache-2.0
+ osprofiler>=1.4.0 # Apache-2.0
+ pytz>=2013.6 # MIT
++keyring>=5.3
+-- 
+1.8.3.1
+
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..0711329
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,5 @@
+ARCHIVES = file:///home/clr/stx-tar/keystone.tar.gz :
diff --git a/build_prepend b/build_prepend
new file mode 100644
index 0000000..23e4553
--- /dev/null
+++ b/build_prepend
@@ -0,0 +1,3 @@
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf --format yaml --output-file=keystone-schema.yaml
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf --format json --output-file=keystone-schema.json
diff --git a/buildreq_add b/buildreq_add
new file mode 100644
index 0000000..2c56011
--- /dev/null
+++ b/buildreq_add
@@ -0,0 +1,26 @@
+openstack-macros
+python-dev
+osprofiler >= 1.1.0
+pbr >= 1.8
+git
+# Required to build keystone.conf
+oslo.cache >= 1.26.0
+oslo.config
+passlib >= 1.6
+pycadf >= 2.1.0
+# Required to compile translation files
+Babel
+# Required to build man pages
+oslo.policy
+jsonschema
+oslo.db >= 4.27.0
+oauthlib
+pysaml2
+keystonemiddleware >= 4.17.0
+testresources
+testscenarios
+oslotest
+redis
+pyzmq
diff --git a/install_append b/install_append
new file mode 100644
index 0000000..6d443d3
--- /dev/null
+++ b/install_append
@@ -0,0 +1,81 @@
+echo "{}" > policy.json
+pwd
+install -d -m 750 %{buildroot}%{_sysconfdir}/keystone/credential-keys/
+install -d -m 755 %{buildroot}%{_sysconfdir}/keystone
+install -p -D -m 640 etc/keystone.conf.sample %{buildroot}%{_sysconfdir}/keystone/keystone.conf
+install -p -D -m 640 policy.json %{buildroot}%{_sysconfdir}/keystone/policy.json
+install -p -D -m 640 keystone-schema.yaml %{buildroot}%{_datadir}/keystone/keystone-schema.yaml
+install -p -D -m 640 keystone-schema.json %{buildroot}%{_datadir}/keystone/keystone-schema.json
+install -p -D -m 644 keystone-dist.conf %{buildroot}%{_datadir}/keystone/keystone-dist.conf
+install -p -D -m 644 etc/policy.v3cloudsample.json %{buildroot}%{_datadir}/keystone/policy.v3cloudsample.json
+install -p -D -m 640 etc/logging.conf.sample %{buildroot}%{_sysconfdir}/keystone/logging.conf
+install -p -D -m 640 etc/default_catalog.templates %{buildroot}%{_sysconfdir}/keystone/default_catalog.templates
+install -p -D -m 640 etc/sso_callback_template.html %{buildroot}%{_sysconfdir}/keystone/sso_callback_template.html
+# STX: don't install a separate keystone logrotate file as this is managed by syslog-ng
+#install -p -D -m 644 openstack-keystone.logrotate %{buildroot}%{_sysconfdir}/logrotate.d/openstack-keystone
+install -d -m 755 %{buildroot}%{_prefix}/lib/sysctl.d
+install -p -D -m 644 openstack-keystone.sysctl %{buildroot}%{_prefix}/lib/sysctl.d/openstack-keystone.conf
+# Install sample data script.
+install -p -D -m 755 tools/sample_data.sh %{buildroot}%{_datadir}/keystone/sample_data.sh
+install -p -D -m 755 openstack-keystone-sample-data %{buildroot}%{_bindir}/openstack-keystone-sample-data
+# Install sample HTTPD integration files
+install -p -D -m 644 httpd/wsgi-keystone.conf  %{buildroot}%{_datadir}/keystone/
+
+# STX install keystone cron script
+install -p -D -m 755 keystone-fernet-keys-rotate-active %{buildroot}%{_bindir}/keystone-fernet-keys-rotate-active
+
+# STX: install password rules(readable only)
+install -p -D -m 440 password-rules.conf %{buildroot}%{_sysconfdir}/keystone/password-rules.conf
+
+# STX: install keystone public gunicorn app
+install -p -D -m 755 public.py  %{buildroot}/%{_datarootdir}/keystone/public.py
+
+# STX: install openstack-keystone service script
+install -p -D -m 644 openstack-keystone.service %{buildroot}%{_unitdir}/openstack-keystone.service
+
+# STX: Install keystone-all bash script
+install -p -D -m 755 keystone-all %{buildroot}%{_bindir}/keystone-all
+
+install -d -m 755 %{buildroot}%{_sharedstatedir}/keystone
+install -d -m 755 %{buildroot}%{_localstatedir}/log/keystone
+
+# cleanup config files installed by keystone
+# we already generate them w/ oslo-config-generator-%{pyver}
+rm -rf %{buildroot}/%{_prefix}%{_sysconfdir}
+
+# docs generation requires everything to be installed first
+%if 0%{?with_doc}
+sphinx-build-%{pyver} -b html doc/source doc/build/html
+
+sphinx-build-%{pyver} -b man doc/source doc/build/man
+mkdir -p %{buildroot}%{_mandir}/man1
+install -p -D -m 644 doc/build/man/*.1 %{buildroot}%{_mandir}/man1/
+%endif
+%if 0%{?with_doc}
+# Fix hidden-file-or-dir warnings
+rm -fr doc/build/html/.doctrees doc/build/html/.buildinfo
+%endif
+
+# Install i18n .mo files (.po and .pot are not required)
+install -d -m 755 %{buildroot}%{_datadir}
+rm -f %{buildroot}%{python_sitelib}/keystone/locale/*/LC_*/keystone*po
+rm -f %{buildroot}%{python_sitelib}/keystone/locale/*pot
+mv %{buildroot}%{python_sitelib}/keystone/locale %{buildroot}%{_datadir}/locale
+
+# Find language files
+#%find_lang keystone --all-name
+
+%pre
+# 163:163 for keystone (openstack-keystone) - rhbz#752842
+getent group keystone >/dev/null || groupadd -r --gid 163 keystone
+getent passwd keystone >/dev/null || \
+useradd --uid 163 -r -g keystone -d %{_sharedstatedir}/keystone -s /sbin/nologin \
+-c "OpenStack Keystone Daemons" keystone
+exit 0
+
+%post
+%sysctl_apply openstack-keystone.conf
+# Install keystone.log file before, so both keystone & root users can write in it.
+touch %{_localstatedir}/log/keystone/keystone.log
+chown root:keystone %{_localstatedir}/log/keystone/keystone.log
+chmod 660 %{_localstatedir}/log/keystone/keystone.log
diff --git a/install_prepend b/install_prepend
new file mode 100644
index 0000000..425aea1
--- /dev/null
+++ b/install_prepend
@@ -0,0 +1,2 @@
+%define _sysconfdir	/usr/local/etc
+%define _unitdir /usr/lib/systemd/system/
diff --git a/make_check_command b/make_check_command
new file mode 100644
index 0000000..f4da339
--- /dev/null
+++ b/make_check_command
@@ -0,0 +1,3 @@
+# This file contains the output files that need %exclude. Full path
+# names, one per line.
+echo "dont need check"
diff --git a/openstack-keystone.license b/openstack-keystone.license
new file mode 100644
index 0000000..4d44686
--- /dev/null
+++ b/openstack-keystone.license
@@ -0,0 +1 @@
+ASL-2.0
diff --git a/openstack-keystone.spec b/openstack-keystone.spec
new file mode 100644
index 0000000..d365610
--- /dev/null
+++ b/openstack-keystone.spec
@@ -0,0 +1,252 @@
+#
+# This file is auto-generated. DO NOT EDIT
+# Generated by: autospec.py
+#
+Name     : openstack-keystone
+Source1  : file:///home/clr/stx-tar/keystone.tar.gz
+Summary  : OpenStack Identity
+License  : Apache-2.0
+Requires: openstack-keystone-bin = %{version}-%{release}
+Requires: openstack-keystone-config = %{version}-%{release}
+Requires: openstack-keystone-data = %{version}-%{release}
+Requires: openstack-keystone-python = %{version}-%{release}
+Requires: openstack-keystone-python3 = %{version}-%{release}
+Requires: openstack-keystone-services = %{version}-%{release}
+Requires: Babel
+Requires: jsonschema
+Requires: keystone
+Requires: oauthlib
+Requires: oslo.config
+Requires: oslo.policy
+Requires: pbr
+Requires: pysaml2
+Requires: python-keystoneclient
+BuildRequires : Babel
+BuildRequires : buildreq-distutils3
+BuildRequires : git
+BuildRequires : jsonschema
+BuildRequires : jsonschema-python
+BuildRequires : keystonemiddleware >= 4.17.0
+BuildRequires : oauthlib
+BuildRequires : openstack-macros
+BuildRequires : oslo.cache >= 1.26.0
+BuildRequires : oslo.config
+BuildRequires : oslo.db >= 4.27.0
+BuildRequires : oslo.policy
+BuildRequires : oslotest
+BuildRequires : osprofiler >= 1.1.0
+BuildRequires : passlib >= 1.6
+BuildRequires : pbr
+BuildRequires : pbr >= 1.8
+BuildRequires : pycadf >= 2.1.0
+BuildRequires : pysaml2
+BuildRequires : python-dev
+BuildRequires : pyzmq
+BuildRequires : redis
+BuildRequires : testresources
+BuildRequires : testscenarios
+Patch1: 0001-Rebasing-Keyring-integration.patch
+
+%description
+Team and repository tags
+        ========================
+
+%package bin
+Requires: openstack-keystone-data = %{version}-%{release}
+Requires: openstack-keystone-config = %{version}-%{release}
+Requires: openstack-keystone-services = %{version}-%{release}
+
+
+
+%package config
+
+%description config
+config components for the openstack-keystone package.
+
+
+%package data
+
+
+
+%package python
+Requires: openstack-keystone-python3 = %{version}-%{release}
+
+%description python
+python components for the openstack-keystone package.
+
+
+%package python3
+Requires: python3-core
+
+%description python3
+python3 components for the openstack-keystone package.
+
+
+%package services
+Group: Systemd services
+
+%description services
+services components for the openstack-keystone package.
+
+
+%prep
+cd ..
+%setup -q -T -D -n keystone-15.0.0.0rc2 -b 1
+%patch1 -p1
+
+%build
+## build_prepend content
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf --format yaml --output-file=keystone-schema.yaml
+PYTHONPATH=. oslo-config-generator --config-file=config-generator/keystone.conf --format json --output-file=keystone-schema.json
+## build_prepend end
+export MAKEFLAGS=%{?_smp_mflags}
+python3 setup.py build
+
+%check
+echo "dont need check"
+%install
+export MAKEFLAGS=%{?_smp_mflags}
+rm -rf %{buildroot}
+## install_prepend content
+%define _sysconfdir	/usr/local/etc
+%define _unitdir /usr/lib/systemd/system/
+## install_prepend end
+python3 -tt setup.py build  install --root=%{buildroot}
+echo ----[ mark ]----
+cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
+echo ----[ mark ]----
+## install_append content
+echo "{}" > policy.json
+pwd
+install -d -m 750 %{buildroot}%{_sysconfdir}/keystone/credential-keys/
+install -d -m 755 %{buildroot}%{_sysconfdir}/keystone
+install -p -D -m 640 etc/keystone.conf.sample %{buildroot}%{_sysconfdir}/keystone/keystone.conf
+install -p -D -m 640 policy.json %{buildroot}%{_sysconfdir}/keystone/policy.json
+install -p -D -m 640 keystone-schema.yaml %{buildroot}%{_datadir}/keystone/keystone-schema.yaml
+install -p -D -m 640 keystone-schema.json %{buildroot}%{_datadir}/keystone/keystone-schema.json
+install -p -D -m 644 keystone-dist.conf %{buildroot}%{_datadir}/keystone/keystone-dist.conf
+install -p -D -m 644 etc/policy.v3cloudsample.json %{buildroot}%{_datadir}/keystone/policy.v3cloudsample.json
+install -p -D -m 640 etc/logging.conf.sample %{buildroot}%{_sysconfdir}/keystone/logging.conf
+install -p -D -m 640 etc/default_catalog.templates %{buildroot}%{_sysconfdir}/keystone/default_catalog.templates
+install -p -D -m 640 etc/sso_callback_template.html %{buildroot}%{_sysconfdir}/keystone/sso_callback_template.html
+install -d -m 755 %{buildroot}%{_prefix}/lib/sysctl.d
+install -p -D -m 644 openstack-keystone.sysctl %{buildroot}%{_prefix}/lib/sysctl.d/openstack-keystone.conf
+install -p -D -m 755 tools/sample_data.sh %{buildroot}%{_datadir}/keystone/sample_data.sh
+install -p -D -m 755 openstack-keystone-sample-data %{buildroot}%{_bindir}/openstack-keystone-sample-data
+install -p -D -m 644 httpd/wsgi-keystone.conf  %{buildroot}%{_datadir}/keystone/
+install -p -D -m 755 keystone-fernet-keys-rotate-active %{buildroot}%{_bindir}/keystone-fernet-keys-rotate-active
+install -p -D -m 440 password-rules.conf %{buildroot}%{_sysconfdir}/keystone/password-rules.conf
+install -p -D -m 755 public.py  %{buildroot}/%{_datarootdir}/keystone/public.py
+install -p -D -m 644 openstack-keystone.service %{buildroot}%{_unitdir}/openstack-keystone.service
+install -p -D -m 755 keystone-all %{buildroot}%{_bindir}/keystone-all
+install -d -m 755 %{buildroot}%{_sharedstatedir}/keystone
+install -d -m 755 %{buildroot}%{_localstatedir}/log/keystone
+rm -rf %{buildroot}/%{_prefix}%{_sysconfdir}
+%if 0%{?with_doc}
+sphinx-build-%{pyver} -b html doc/source doc/build/html
+sphinx-build-%{pyver} -b man doc/source doc/build/man
+mkdir -p %{buildroot}%{_mandir}/man1
+install -p -D -m 644 doc/build/man/*.1 %{buildroot}%{_mandir}/man1/
+%endif
+%if 0%{?with_doc}
+rm -fr doc/build/html/.doctrees doc/build/html/.buildinfo
+%endif
+install -d -m 755 %{buildroot}%{_datadir}
+rm -f %{buildroot}%{python_sitelib}/keystone/locale/*/LC_*/keystone*po
+rm -f %{buildroot}%{python_sitelib}/keystone/locale/*pot
+mv %{buildroot}%{python_sitelib}/keystone/locale %{buildroot}%{_datadir}/locale
+%pre
+getent group keystone >/dev/null || groupadd -r --gid 163 keystone
+getent passwd keystone >/dev/null || \
+useradd --uid 163 -r -g keystone -d %{_sharedstatedir}/keystone -s /sbin/nologin \
+-c "OpenStack Keystone Daemons" keystone
+exit 0
+%post
+%sysctl_apply openstack-keystone.conf
+touch %{_localstatedir}/log/keystone/keystone.log
+chown root:keystone %{_localstatedir}/log/keystone/keystone.log
+chmod 660 %{_localstatedir}/log/keystone/keystone.log
+## install_append end
+
+%files
+%defattr(-,root,root,-)
+/usr/local/etc/keystone/default_catalog.templates
+/usr/local/etc/keystone/keystone.conf
+/usr/local/etc/keystone/logging.conf
+/usr/local/etc/keystone/password-rules.conf
+/usr/local/etc/keystone/policy.json
+/usr/local/etc/keystone/sso_callback_template.html
+
+%files bin
+%defattr(-,root,root,-)
+/usr/bin/keystone-all
+/usr/bin/keystone-fernet-keys-rotate-active
+/usr/bin/keystone-manage
+/usr/bin/keystone-status
+/usr/bin/keystone-wsgi-admin
+/usr/bin/keystone-wsgi-public
+/usr/bin/openstack-keystone-sample-data
+
+%files config
+%defattr(-,root,root,-)
+%config /usr/etc/keystone/sso_callback_template.html
+/usr/lib/sysctl.d/openstack-keystone.conf
+
+%files data
+%defattr(-,root,root,-)
+/usr/share/keystone/keystone-dist.conf
+/usr/share/keystone/keystone-schema.json
+/usr/share/keystone/keystone-schema.yaml
+/usr/share/keystone/policy.v3cloudsample.json
+/usr/share/keystone/public.py
+/usr/share/keystone/sample_data.sh
+/usr/share/keystone/wsgi-keystone.conf
+
+%files python
+%defattr(-,root,root,-)
+
+%files python3
+%defattr(-,root,root,-)
+/usr/lib/python3*/*
+
+%files services
+%defattr(-,root,root,-)
+/usr/lib/systemd/system/openstack-keystone.service
diff --git a/options.conf b/options.conf
new file mode 100644
index 0000000..c3b6832
--- /dev/null
+++ b/options.conf
@@ -0,0 +1,58 @@
+name = openstack-keystone
+url = file:///home/clr/stx-tar/keystone-15.0.0.0rc2.tar.gz
+archives = file:///home/clr/stx-tar/keystone.tar.gz :
+use_lto = true
+verify_required = false
diff --git a/requires_add b/requires_add
new file mode 100644
index 0000000..c15c2e2
--- /dev/null
+++ b/requires_add
@@ -0,0 +1,4 @@
+python-keystoneclient
+keystone
diff --git a/series b/series
new file mode 100644
index 0000000..4dc80fb
--- /dev/null
+++ b/series
@@ -0,0 +1 @@
+0001-Rebasing-Keyring-integration.patch
