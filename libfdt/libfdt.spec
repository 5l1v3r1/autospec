#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : libfdt
Version  : 1.4.4
Release  : 6
URL      : file:///home/clear/tar/dtc-1.4.4.tar.gz
Source0  : file:///home/clear/tar/dtc-1.4.4.tar.gz
Summary  : No detailed summary available
Group    : Development/Tools
License  : Apache-2.0
Requires: libfdt-bin = %{version}-%{release}
Requires: libfdt-data = %{version}-%{release}
Requires: libfdt-plugins = %{version}-%{release}
BuildRequires : bison
BuildRequires : flex
BuildRequires : gcc

%description
The source tree contains the Device Tree Compiler (dtc) toolchain for
working with device tree source and binary files and also libfdt, a
utility library for reading and manipulating the binary format.

%package bin
Summary: bin components for the libfdt package.
Group: Binaries
Requires: libfdt-data = %{version}-%{release}

%description bin
bin components for the libfdt package.


%package data
Summary: data components for the libfdt package.
Group: Data

%description data
data components for the libfdt package.


%package dev
Summary: dev components for the libfdt package.
Group: Development
Requires: libfdt-bin = %{version}-%{release}
Requires: libfdt-data = %{version}-%{release}
Provides: libfdt-devel = %{version}-%{release}
Requires: libfdt = %{version}-%{release}

%description dev
dev components for the libfdt package.


%package plugins
Summary: plugins components for the libfdt package.
Group: Default

%description plugins
plugins components for the libfdt package.


%package staticdev
Summary: staticdev components for the libfdt package.
Group: Default
Requires: libfdt-dev = %{version}-%{release}

%description staticdev
staticdev components for the libfdt package.


%prep
%setup -q -n dtc-1.4.4

%build
## build_prepend content
%define debug_package %{nil}
%define prefix /usr/
## build_prepend end
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1567751616
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
make  %{?_smp_mflags}


%install
export SOURCE_DATE_EPOCH=1567751616
rm -rf %{buildroot}
make install PREFIX=%{buildroot}%{prefix}
## install_append content
install -p -D -m 755 README.license %{buildroot}/usr/share/license
%clean
rm -rf $RPM_BUILD_ROOT
## install_append end

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/convert-dtsv0
/usr/bin/dtc
/usr/bin/dtdiff
/usr/bin/fdtdump
/usr/bin/fdtget
/usr/bin/fdtput

%files data
%defattr(-,root,root,-)
/usr/share/license

%files dev
%defattr(-,root,root,-)
/usr/include/*.h
/usr/lib/libfdt-1.4.4.so
/usr/lib/libfdt.so

%files plugins
%defattr(-,root,root,-)
/usr/lib/libfdt.so.1

%files staticdev
%defattr(-,root,root,-)
/usr/lib/libfdt.a
