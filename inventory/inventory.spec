#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : inventory
Version  : 1.0
Release  : 2
URL      : file:///home/clear/tar/inventory-1.0.tar.gz
Source0  : file:///home/clear/tar/inventory-1.0.tar.gz
Summary  : No detailed summary available
Group    : Development/Tools
License  : Apache-2.0
Requires: inventory-bin = %{version}-%{release}
Requires: inventory-python = %{version}-%{release}
Requires: inventory-python3 = %{version}-%{release}
Requires: inventory-services = %{version}-%{release}
Requires: SQLAlchemy
Requires: WSME
Requires: WebOb
Requires: jsonpatch
Requires: keystonemiddleware
Requires: oslo.concurrency
Requires: oslo.config
Requires: oslo.context
Requires: oslo.db
Requires: oslo.i18n
Requires: oslo.log
Requires: oslo.messaging
Requires: oslo.middleware
Requires: oslo.policy
Requires: oslo.rootwrap
Requires: oslo.serialization
Requires: oslo.service
Requires: oslo.utils
Requires: oslo.versionedobjects
Requires: osprofiler
Requires: pbr
Requires: pecan
Requires: psutil
Requires: retrying
Requires: six
Requires: stevedore
BuildRequires : SQLAlchemy
BuildRequires : WSME
BuildRequires : WebOb
BuildRequires : buildreq-distutils3
BuildRequires : cgts-client
BuildRequires : jsonpatch
BuildRequires : keystoneauth1
BuildRequires : keystonemiddleware
BuildRequires : mock
BuildRequires : os-testr
BuildRequires : oslo.concurrency
BuildRequires : oslo.config
BuildRequires : oslo.context
BuildRequires : oslo.db
BuildRequires : oslo.i18n
BuildRequires : oslo.log
BuildRequires : oslo.messaging
BuildRequires : oslo.middleware
BuildRequires : oslo.policy
BuildRequires : oslo.rootwrap
BuildRequires : oslo.serialization
BuildRequires : oslo.service
BuildRequires : oslo.utils
BuildRequires : oslo.versionedobjects
BuildRequires : oslotest
BuildRequires : osprofiler
BuildRequires : pbr
BuildRequires : pecan
BuildRequires : psutil
BuildRequires : python-neutronclient
BuildRequires : requests
BuildRequires : retrying
BuildRequires : setuptools
BuildRequires : six
BuildRequires : stevedore
BuildRequires : systemd
BuildRequires : systemd-devel

%description
This is a database migration repository.
More information at:
https://github.com/openstack/sqlalchemy-migrate

%package bin
Summary: bin components for the inventory package.
Group: Binaries
Requires: inventory-services = %{version}-%{release}

%description bin
bin components for the inventory package.


%package python
Summary: python components for the inventory package.
Group: Default
Requires: inventory-python3 = %{version}-%{release}

%description python
python components for the inventory package.


%package python3
Summary: python3 components for the inventory package.
Group: Default
Requires: python3-core

%description python3
python3 components for the inventory package.


%package services
Summary: services components for the inventory package.
Group: Systemd services

%description services
services components for the inventory package.


%prep
%setup -q -n inventory-1.0

%build
## build_prepend content
%define local_bindir         /usr/bin/
%define local_etc_goenabledd /usr/local/etc/goenabled.d/
%define local_etc_inventory  /usr/local/etc/inventory/
%define local_etc_motdd      /usr/local/etc/motd.d/
%define pythonroot           /usr/lib64/python2.7/site-packages
%define ocf_resourced        /usr/lib/ocf/resource.d
%define local_etc_initd /usr/local/etc/init.d/
%define local_etc_pmond /usr/local/etc/pmon.d/
%define _unitdir /usr/lib/systemd/system/
%define debug_package %{nil}
echo "Start inventory build"
export PBR_VERSION=%{version}
PYTHONPATH=. oslo-config-generator --config-file=inventory/config-generator.conf
## build_prepend end
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1567667464
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%check
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
echo "no check"
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
## install_prepend content
echo "Start inventory install"
export PBR_VERSION=%{version}
## install_prepend end
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----
## install_append content
%{__python} setup.py install --root=%{buildroot} \
--install-lib=%{pythonroot} \
--prefix=/usr \
--install-data=/usr/share \
--single-version-externally-managed
install -d -m 755 %{buildroot}%{local_etc_goenabledd}
install -p -D -m 755 etc/inventory/inventory_goenabled_check.sh %{buildroot}%{local_etc_goenabledd}/inventory_goenabled_check.sh
install -d -m 755 %{buildroot}%{local_etc_inventory}
install -p -D -m 755 etc/inventory/policy.json %{buildroot}%{local_etc_inventory}/policy.json
install -d -m 755 %{buildroot}%{local_etc_motdd}
install -p -D -m 755 etc/inventory/motd-system %{buildroot}%{local_etc_motdd}/10-system-config
install -m 755 -p -D scripts/inventory-api %{buildroot}/usr/lib/ocf/resource.d/platform/inventory-api
install -m 755 -p -D scripts/inventory-conductor %{buildroot}/usr/lib/ocf/resource.d/platform/inventory-conductor
install -m 644 -p -D scripts/inventory-api.service %{buildroot}%{_unitdir}/inventory-api.service
install -m 644 -p -D scripts/inventory-conductor.service %{buildroot}%{_unitdir}/inventory-conductor.service
install -m 644 inventory/db/sqlalchemy/migrate_repo/migrate.cfg %{buildroot}%{pythonroot}/inventory/db/sqlalchemy/migrate_repo/migrate.cfg
cd %{_builddir}/%{name}-%{version} && oslo-config-generator --config-file inventory/config-generator.conf --output-file %{_builddir}/%{name}-%{version}/inventory.conf.sample
%clean
echo "CLEAN CALLED"
rm -rf $RPM_BUILD_ROOT
## install_append end

%files
%defattr(-,root,root,-)
/usr/lib/ocf/resource.d/platform/inventory-api
/usr/lib/ocf/resource.d/platform/inventory-conductor
/usr/local/etc/goenabled.d/inventory_goenabled_check.sh
/usr/local/etc/inventory/policy.json
/usr/local/etc/motd.d/10-system-config

%files bin
%defattr(-,root,root,-)
/usr/bin/inventory-agent
/usr/bin/inventory-api
/usr/bin/inventory-conductor
/usr/bin/inventory-dbsync
/usr/bin/inventory-dnsmasq-lease-update

%files python
%defattr(-,root,root,-)
/usr/lib64/python*/*

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*

%files services
%defattr(-,root,root,-)
/usr/lib/systemd/system/inventory-api.service
/usr/lib/systemd/system/inventory-conductor.service
