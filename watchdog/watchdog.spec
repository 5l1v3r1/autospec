#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : watchdog
Version  : 5.13
Release  : 3
URL      : file:///home/clr/stx-tar/watchdog-5.13.tar.gz
Source0  : file:///home/clr/stx-tar/watchdog-5.13.tar.gz
Source1  : watchdog-ping.service
Source2  : watchdog.service
Summary  : Software and/or Hardware watchdog daemon
Group    : Development/Tools
License  : GPL-2.0+
Requires: watchdog-bin = %{version}-%{release}
Requires: watchdog-man = %{version}-%{release}
Requires: watchdog-services = %{version}-%{release}
Requires: systemd
BuildRequires : systemd
Patch1: 0001-watchdog-Clearer-help-output.patch
Patch2: 0002-wd_identify-wd_keepalive-Document-c-config-file-in-h.patch
Patch3: 0003-watchdog-5.13-rhsel.patch
Patch4: 0004-watchdog-5.13-rhseldoc.patch
Patch5: fix-ping-failure.patch

%description
The watchdog program can be used as a powerful software watchdog daemon 
or may be alternately used with a hardware watchdog device such as the 
IPMI hardware watchdog driver interface to a resident Baseboard 
Management Controller (BMC).  watchdog periodically writes to /dev/watchdog; 
the interval between writes to /dev/watchdog is configurable through settings 
in the watchdog sysconfig file.  This configuration file is also used to 
set the watchdog to be used as a hardware watchdog instead of its default 
software watchdog operation.  In either case, if the device is open but not 
written to within the configured time period, the watchdog timer expiration 
will trigger a machine reboot. When operating as a software watchdog, the 
ability to reboot will depend on the state of the machine and interrupts.  
When operating as a hardware watchdog, the machine will experience a hard 
reset (or whatever action was configured to be taken upon watchdog timer 
expiration) initiated by the BMC.

%package bin
Summary: bin components for the watchdog package.
Group: Binaries
Requires: watchdog-services = %{version}-%{release}

%description bin
bin components for the watchdog package.


%package man
Summary: man components for the watchdog package.
Group: Default

%description man
man components for the watchdog package.


%package services
Summary: services components for the watchdog package.
Group: Systemd services

%description services
services components for the watchdog package.


%prep
%setup -q -n watchdog-5.13
%patch1 -p1
%patch2 -p1
%patch3 -p1
%patch4 -p1
%patch5 -p1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1568180810
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
%configure --disable-static
make  %{?_smp_mflags}

%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
make VERBOSE=1 V=1 %{?_smp_mflags} check

%install
export SOURCE_DATE_EPOCH=1568180810
rm -rf %{buildroot}
## install_prepend content
%global _sysconfdir	'/usr/local/etc'
%define _unitdir /usr/lib/systemd/system/
## install_prepend end
%make_install
mkdir -p %{buildroot}/usr/lib/systemd/system
install -m 0644 %{SOURCE1} %{buildroot}/usr/lib/systemd/system/watchdog-ping.service
install -m 0644 %{SOURCE2} %{buildroot}/usr/lib/systemd/system/watchdog.service
## install_append content
install -d -m0755 ${RPM_BUILD_ROOT}%{_sysconfdir}
install -d -m0755 ${RPM_BUILD_ROOT}%{_sysconfdir}/watchdog.d
make DESTDIR=${RPM_BUILD_ROOT} install
install -Dp -m0644 %{name}.sysconfig ${RPM_BUILD_ROOT}%{_sysconfdir}/sysconfig/watchdog
install -Dp -m0644 %{SOURCE2} ${RPM_BUILD_ROOT}%{_unitdir}/watchdog.service
install -Dp -m0644 %{SOURCE1} ${RPM_BUILD_ROOT}%{_unitdir}/watchdog-ping.service
install -Dd -m0755 ${RPM_BUILD_ROOT}%{_libexecdir}/watchdog/scripts
%post
if [ $1 -eq 1 ] ; then
/bin/systemctl daemon-reload >/dev/null 2>&1 || :
fi
%preun
if [ $1 -eq 0 ] ; then
/bin/systemctl --no-reload disable watchdog.service > /dev/null 2>&1 || :
/bin/systemctl --no-reload disable watchdog-ping.service > /dev/null 2>&1 || :
/bin/systemctl stop watchdog.service > /dev/null 2>&1 || :
/bin/systemctl stop watchdog-ping.service > /dev/null 2>&1 || :
fi
%postun
/bin/systemctl daemon-reload >/dev/null 2>&1 || :
if [ $1 -ge 1 ] ; then
/bin/systemctl try-restart watchdog.service >/dev/null 2>&1 || :
/bin/systemctl try-restart watchdog-ping.service >/dev/null 2>&1 || :
fi
%triggerun -- watchdog < 5.9-4
/usr/bin/systemd-sysv-convert --save watchdog >/dev/null 2>&1 ||:
/sbin/chkconfig --del watchdog >/dev/null 2>&1 || :
/bin/systemctl try-restart watchdog.service >/dev/null 2>&1 || :
/bin/systemctl try-restart watchdog-ping.service >/dev/null 2>&1 || :
## install_append end

%files
%defattr(-,root,root,-)
/usr/local/etc/sysconfig/watchdog

%files bin
%defattr(-,root,root,-)
/usr/bin/watchdog
/usr/bin/wd_identify
/usr/bin/wd_keepalive

%files man
%defattr(0644,root,root,0755)
/usr/share/man/man5/watchdog.conf.5
/usr/share/man/man8/watchdog.8
/usr/share/man/man8/wd_identify.8
/usr/share/man/man8/wd_keepalive.8

%files services
%defattr(-,root,root,-)
/usr/lib/systemd/system/watchdog-ping.service
/usr/lib/systemd/system/watchdog.service
